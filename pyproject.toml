[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "numtype"
version = "2.2.2.0.dev0"
description = "Experimental Typing Stubs for NumPy"
readme = "README.md"
authors = [{name = "Joren Hammudoglu", email = "jhammudoglu@gmail.com"}]
maintainers = [{name = "NumPy Developers", email = "numpy-discussion@python.org"}]
license = "BSD-3-Clause"
keywords = ["numpy", "typing", "stubs"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Stubs Only",
    "Typing :: Typed",
]
requires-python = ">=3.10"
dependencies = []

    [project.optional-dependencies]
    numpy = ["numpy>=2.2.2,<2.3"]

    [project.urls]
    Homepage = "https://numpy.org/"
    Repository = "https://github.com/jorenham/numtype/"
    Issues = "https://github.com/jorenham/numtype/issues"
    Changelog = "https://github.com/jorenham/numtype/releases"


[dependency-groups]
numpy = ["numtype[numpy]"]
dev = [
    {include-group = "numpy"},
    "ruff>=0.9.3",
    "basedmypy[faster-cache]>=2.9.1",
    "basedpyright>=1.25.0",
    "libcst>=1.6.0",
]


[tool.hatch.build]
packages = ["src/numpy-stubs"]

    [tool.hatch.build.targets.sdist]
    exclude = [
        "/.github",
        "/.vscode",
        "/dist",
        "/docs",
        "/test",
        "/tool",
        ".libcst.codemod.yaml",
        "CONTRIBUTING.md",
        "uv.lock",
    ]

[tool.mypy]
python_version = "3.10"
strict = true

disable_bytearray_promotion = true
disable_memoryview_promotion = true
enable_error_code = ["ignore-without-code", "truthy-bool"]
warn_unused_ignores = true
# TODO
disable_error_code = ["explicit-override"]
# basedmypy/mypy compat
bare_literals = false
default_return = false
disallow_any_explicit = false
disallow_untyped_calls = false
warn_unreachable = false


[tool.pyright]
include = [
    "src/numpy-stubs",
    "test/static/accept",
    "test/static/reject",
    "test/static/sanity",
    "tool",
]
ignore = [".venv"]
stubPath = "src"
pythonPlatform = "All"
pythonVersion = "3.10"
typeCheckingMode = "standard" # TODO(jorenham): set to "all"

deprecateTypingAliases = true
enableTypeIgnoreComments = false
enableReachabilityAnalysis = false
reportCallInDefaultInitializer = true
reportImportCycles = true
reportImplicitOverride = false             # TODO
reportMissingSuperCall = false
reportPrivateUsage = false
reportPropertyTypeMismatch = false
reportShadowedImports = true
reportUninitializedInstanceVariable = true
reportUnnecessaryTypeIgnoreComment = true
reportUnusedExpression = false
# basedpyright only
failOnWarnings = true
reportIgnoreCommentWithoutRule = true
reportImplicitAbstractClass = true
reportImplicitRelativeImport = true
reportImplicitStringConcatenation = false
reportInvalidCast = true
reportPrivateLocalImportUsage = true
reportUnannotatedClassAttribute = false   # TODO
strictGenericNarrowing = true


[tool.ruff]
src = ["src", "test", "tool"]
extend-exclude = [".git", ".mypy_cache", ".tox", ".venv"]
force-exclude = true
# https://typing.readthedocs.io/en/latest/guides/writing_stubs.html#maximum-line-length
line-length = 130
preview = true

    [tool.ruff.format]
    docstring-code-format = true
    line-ending = "lf"

    [tool.ruff.lint]
    select = ["ALL"]
    ignore = [
        "FBT",    # flake8-boolean-trap
        "CPY",    # flake8-copyright
        "EM",     # flake8-errmsg
        "FIX",    # flake8-fixme
        "ANN401", # flake8-annotations: any-type
        "PYI041", # flake8-pyi:         redundant-numeric-union
    ]

        [tool.ruff.lint.per-file-ignores]
        "*.pyi" = [
            "N",       # pep8-naming
            "TD",      # flake8-todo
            "COM812",  # flake8-commas: missing-trailing-comma
            "PYI054",  # flake8-pyi:    numeric-literal-too-long
            "PLC2701", # pylint/C:      import-private-name
        ]

        [tool.ruff.lint.flake8-import-conventions]
        banned-from = [
            "abc",
            "basedtyping",
            "ctypes",
            "datetime",
            "os",
            "sys",
            "numpy",
            "numpy.typing",
        ]
            [tool.ruff.lint.flake8-import-conventions.extend-aliases]
            "ctypes" = "ct"
            "datetime" = "dt"
            "numpy" = "np"
            "numpy.typing" = "npt"

        [tool.ruff.lint.isort]
        case-sensitive = true
        combine-as-imports = true
        extra-standard-library = ["_typeshed", "typing_extensions"]
        known-first-party = ["numpy"]
        split-on-trailing-comma = true

        [tool.ruff.lint.pydocstyle]
        convention = "numpy"


[tool.typos.files]
extend-exclude = ["*.pyi", ".mypyignore"]
